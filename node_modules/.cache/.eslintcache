[{"/Users/tony/Desktop/actaxi-frontend/src/index.js":"1","/Users/tony/Desktop/actaxi-frontend/src/reportWebVitals.js":"2","/Users/tony/Desktop/actaxi-frontend/src/App.js":"3"},{"size":535,"mtime":1651699804265,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1651699804265,"results":"6","hashOfConfig":"5"},{"size":2535,"mtime":1651717958857,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uk2idh",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/tony/Desktop/actaxi-frontend/src/index.js",[],[],"/Users/tony/Desktop/actaxi-frontend/src/reportWebVitals.js",[],[],"/Users/tony/Desktop/actaxi-frontend/src/App.js",["18","19","20"],[],"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState } from 'react';\nimport { DayPicker } from \"react-day-picker\";\nimport 'react-day-picker/dist/style.css';\nimport download from 'downloadjs';\n\nfunction App() {\n  const [selectedStartDt, setSelectedStartDt] = useState(new Date(\"2022-04-20T00:00:00.000Z\"));\n  const [selectedEndDt, setSelectedEndDt] = useState(new Date(\"2022-04-21T00:00:00.000Z\"));\n  const [responseMessage, setResponseMessage] = useState()\n  var date = new Date();\n  const maxDate = date.setDate(date.getDate() - 8);\n\n  const disabledDays = [\n    { to: selectedStartDt }\n  ];\n\n  let startfooter = <p>Please pick a day.</p>;\n  let endfooter = <p>Please pick a day.</p>;\n\n  const requestXMLFiles = async () => {\n    try {\n      const start = selectedStartDt.toISOString().split('T')[0] + 'Z'\n      const end = selectedEndDt.toISOString().split('T')[0] + 'Z'\n      var url = 'http://159.203.10.73/convertToXML?' + 'from=' + start + '&to=' + end\n      const response = await fetch(url);\n      const blob = await response.blob();\n      download(blob, 'auto_generated.xml')\n      setResponseMessage('Generated XML file successfully')\n    } catch (err) {\n      setResponseMessage('Unable to generate XML File')\n    }\n\n  }\n\n  return (\n    <>\n      <h3 style={{ paddingTop: '50px', textAlign: 'center' }}>Request Data Trip XML</h3>\n      <div style={{ paddingTop: '50px', display: 'flex', flexDirection: \"row\", gap: '50px', justifyContent: 'center', alignItems: 'center', textAlign: 'center' }}>\n        <div>\n          <h4>Select Start Date</h4>\n          <DayPicker mode=\"single\"\n            defaultMonth={selectedStartDt}\n            selected={selectedStartDt}\n            onSelect={setSelectedStartDt}\n            autoFocus={true}\n            disabled={disabledDays}\n          />\n        </div>\n        <div>\n          <h4>Select End Date</h4>\n          <DayPicker mode=\"range\"\n            defaultMonth={selectedEndDt}\n            selected={selectedEndDt}\n            autoFocus={true}\n            closeCalendar={true}\n            minDate={new Date()}\n            maxDate={maxDate}\n            onSelect={setSelectedEndDt}\n          />\n        </div>\n      </div>\n      <div style={{ paddingTop: '30px', display: 'flex', justifyContent: 'center'}}>\n        <p>{responseMessage}</p>\n      </div>\n      <div style={{ paddingTop: '30px', display: 'flex', justifyContent: 'center' }}>\n        <button onClick={requestXMLFiles}>Request XML file</button>\n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n",{"ruleId":"21","severity":1,"message":"22","line":19,"column":7,"nodeType":"23","messageId":"24","endLine":19,"endColumn":18},{"ruleId":"21","severity":1,"message":"25","line":20,"column":7,"nodeType":"23","messageId":"24","endLine":20,"endColumn":16},{"ruleId":"26","severity":1,"message":"27","line":26,"column":54,"nodeType":"28","messageId":"29","endLine":26,"endColumn":55},"no-unused-vars","'startfooter' is assigned a value but never used.","Identifier","unusedVar","'endfooter' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat"]